<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">


	<!-- 게시판 검색기능 -->
	<sql id="search">
		<trim prefixOverrides="or">
			<foreach item="type" collection="types">
				<trim prefix="or">
					<choose>
						<when test="type == 'name'.toString()">
							post_name like concat('%', #{keyword}, '%')
						</when>
						<when test="type == 'content'.toString()">
							post_content like concat('%', #{keyword}, '%')
						</when>
						<when test="type == 'writer'.toString()">
							member_nickname like concat('%', #{keyword}, '%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<sql id="order">
		order by
		<choose>
			<when test="sort=='recent'.toString()">
				post_id
			</when>
			<otherwise>
				post_view_count
			</otherwise>
		</choose>
		desc
	</sql>
	
	<select id="AdminSelectAll" resultType="postVO">
		select post_id, post_type, post_name, post_content, post_register_date, member_id, post_is_blinded 
		from tbl_post
		where (post_type like '스터디' or post_type like '노하우' or post_type like 'QnA')
		order by post_register_date desc
		limit #{offset}, #{rowCount};
	</select>
	
	<select id="AdminSelectInquiry" resultType="postVO">
		select post_id, post_type, post_name, post_content, post_register_date, member_id, post_is_blinded 
		from tbl_post
		where (post_type like '문의')
		order by post_register_date desc
		limit #{offset}, #{rowCount};
	</select>

	<select id="selectAll" resultType="postDTO">
		select post_id, post_name, post_content, post_register_date, m.member_id    
		from tbl_member m join tbl_post p
		<trim suffixOverrides="and"> 
			on m.member_id = p.member_id and
			<include refid="search"/>
		</trim>
			<include refid="order"/>
		limit #{offset}, #{rowCount}
	</select>
	
	<select id="getTotal" resultType="_int">
		select distinct count(post_id)
		from tbl_member m join tbl_post p
		<trim suffixOverrides="and"> 
			on m.member_id = p.member_id and
			<include refid="search"/>
		</trim>
	</select>
	
	<insert id="insert">
		insert into tbl_post
		(post_id, post_name, post_content, member_id)
		values(#{postId}, #{postName}, #{postContent}, #{memberId})
	</insert>
	
	<select id="select" resultType="postDTO">
		select post_id, post_name, post_content, post_register_date, post_update_date, post_view_count, m.member_id, member_nickname 
		from tbl_member m join tbl_post p
		on m.member_id = p.member_id and post_id = #{postId}
	</select>
	
	<update id="update">
		update tbl_post
		set post_is_blinded = #{postIsBlinded}
		where post_id = #{postId}
	</update>
	
	<delete id="delete">
		delete from tbl_post
		where post_id = #{postId}
	</delete>
	
	<update id="updateViewCount">
		update tbl_post
		set post_view_count = post_view_count + 1
		where post_id = #{postId}
	</update>
	
	<select id="selectCurrentSequence" resultType="long">
		select last_insert_id()
	</select>
</mapper>


